name: Test Docker Compose (Develop)

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services with Docker Compose
        run: |
          cd docker
          docker compose -f docker-compose.dev.yml up -d --build

      - name: Wait for services to be ready
        run: |
          echo "‚è≥ Esperando que los servicios est√©n listos (esto puede tomar ~5 minutos)..."
          
          cd docker
          for i in {1..30}; do
            echo "Esperando... $((i * 10)) segundos transcurridos"
            sleep 10
          
            RUNNING=$(docker compose -f docker-compose.dev.yml ps -q | wc -l)
            if [ $RUNNING -eq 3 ]; then
              HEALTHY=$(docker compose -f docker-compose.dev.yml ps | grep -E "agorasoft-(proxy|frontend|backend)" | grep -c "Up")
              if [ $HEALTHY -eq 3 ]; then
                echo "‚úÖ Todos los servicios est√°n listos despu√©s de $((i * 10)) segundos"
                break
              fi
            fi
          done

      - name: Check running containers
        run: |
          echo "üìã Estado de los contenedores:"
          cd docker
          docker compose -f docker-compose.dev.yml ps
          echo ""
          echo "üìù Logs de los servicios:"
          docker compose -f docker-compose.dev.yml logs --tail=50

      - name: Verify specific services are running
        run: |
          echo "üîç Verificando servicios espec√≠ficos..."
          
          if docker ps --filter "name=agorasoft-proxy" --filter "status=running" | grep -q agorasoft-proxy; then
            echo "‚úÖ agorasoft-proxy est√° corriendo"
          else
            echo "‚ùå agorasoft-proxy NO est√° corriendo"
            docker logs agorasoft-proxy
            exit 1
          fi
          
          if docker ps --filter "name=agorasoft-frontend" --filter "status=running" | grep -q agorasoft-frontend; then
            echo "‚úÖ agorasoft-frontend est√° corriendo"
          else
            echo "‚ùå agorasoft-frontend NO est√° corriendo"
            docker logs agorasoft-frontend
            exit 1
          fi
          
          if docker ps --filter "name=agorasoft-backend" --filter "status=running" | grep -q agorasoft-backend; then
            echo "‚úÖ agorasoft-backend est√° corriendo"
          else
            echo "‚ùå agorasoft-backend NO est√° corriendo"
            docker logs agorasoft-backend
            exit 1
          fi
          
          echo ""
          echo "üéâ Todos los servicios est√°n corriendo correctamente"

      - name: Show logs on failure
        if: failure()
        run: |
          echo "‚ùå El workflow fall√≥. Mostrando logs completos:"
          cd docker
          docker compose -f docker-compose.dev.yml logs

      - name: Stop and remove containers
        if: always()
        run: |
          echo "üßπ Limpiando contenedores..."
          cd docker
          docker compose -f docker-compose.dev.yml down -v