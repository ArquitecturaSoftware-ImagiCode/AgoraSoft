services:
  database:
    image: postgres:16-alpine
    container_name: agorasoft-database
    environment:
      POSTGRES_DB: AgoraSoft
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: contrasena
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d AgoraSoft"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: agorasoft-backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/AgoraSoft
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: contrasena
      SPRING_JPA_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      CLERK_SECRET_KEY: sk_test_GNj2mKLiTHeAdLs1kF7RR0vvVZ2dzVGrVgiGIrqsVF
    expose:
      - "8080"
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: agorasoft-frontend
    expose:
      - "80"

  proxy:
    image: nginx:1.27-alpine
    container_name: agorasoft-proxy
    depends_on:
      - backend
      - frontend
    ports:
      - "8085:80"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data: